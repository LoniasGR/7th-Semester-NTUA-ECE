.include "m16def.inc"

.DSEG
_tmp_: .byte 2

.CSEG

.def input  = r22
.def looper = r23
.def runner = r20
.def decs = r18
start:
ldi r24,low(RAMEND)
out SPL,r24
ldi r24,high(RAMEND)
out SPH,r24
ser r26
out DDRD, r26
out DDRA, r26
ldi r26,0xF0
out DDRC,r26
clr r26
out DDRB, r26 ; portb input

main:
sts _tmp_,r26 ; we want continuous functionality
rcall lcd_init
in input, PINB 
mov runner, input
rcall display_number
rcall display_equal
mov input, runner
cpi input, 0
breq convert
;out PORTA, input

sbrc input, 7 ; check sign bit
rjmp out_minus
rjmp out_plus
convert:
;ser r26 
;out PORTD, r26
sbrc input, 7
neg input ; complement of 2 
mov runner, input
;out PORTA, input
cpi r20,100
brsh handle_hundred
rjmp calc_dec ; normal case
handle_hundred:
ldi r24, '1' ; max 128
rcall lcd_data
subi runner,100
calc_dec:
ldi decs, 0
loop1:
cpi runner, 10 ; if runner < 10 print decs 
brlo out_decs
subi runner, 10
inc decs
rjmp loop1

out_decs: 
mov r24, decs ; <10
rcall bin_to_ascii
rcall lcd_data ; input r24 

out_final: ; gia tis monades
mov r24, runner
rcall bin_to_ascii
rcall lcd_data

rjmp main


out_minus: 
ldi r24, '-'
rcall lcd_data
rjmp convert

out_plus:
ldi r24, '+'
rcall lcd_data
rjmp convert





bin_to_ascii:
;input: r24 - binary of the digit
;output: r24, ascii of the digit
;uses: r24
push r25
mov r25, r24
ldi r24, '0'
cpi r25, 0
breq end
ldi r24, '1'
cpi r25, 1
breq end
ldi r24, '2'
cpi r25, 2
breq end
ldi r24, '3'
cpi r25, 3
breq end
ldi r24, '4'
cpi r25, 4
breq end
ldi r24, '5'
cpi r25, 5
breq end
ldi r24, '6'
cpi r25, 6
breq end
ldi r24, '7'
cpi r25, 7
breq end
ldi r24, '8'
cpi r25, 8
breq end
ldi r24, '9'
cpi r25, 9
breq end
end:
pop r25
ret

display_equal:
ldi r24, '='
rcall lcd_data
ret

display_number:
ldi looper, 8
check: 
lsl input
brcs out_one
out_zero:
ldi r24, '0'
rcall lcd_data
dec looper
breq return
rjmp check
out_one:
ldi r24, '1'
rcall lcd_data
dec looper
breq return
rjmp check
return: 
ret




write_2_nibbles:
;input: r24 - byte
;output: -
;registers used: r24:r25

push r24		; ??????? ?? 4 MSB
in r25 ,PIND	; ??????????? ?? 4 LSB ??? ?? ?????????????
andi r25 ,0x0f	; ??? ?? ??? ????????? ??? ????? ??????????? ?????????
andi r24 ,0xf0	; ????????????? ?? 4 MSB ???
add r24 ,r25	; ???????????? ?? ?? ???????????? 4 LSB
out PORTD ,r24	; ??? ???????? ???? ?????
sbi PORTD ,PD3	; ????????????? ?????? Enable ???? ????????? PD3
cbi PORTD ,PD3	; PD3=1 ??? ???? PD3=0
pop r24			; ??????? ?? 4 LSB. ????????? ?? byte.
swap r24		; ????????????? ?? 4 MSB ?? ?? 4 LSB
andi r24 ,0xf0	; ??? ?? ??? ????? ???? ?????????????
add r24 ,r25
out PORTD ,r24
sbi PORTD ,PD3	; ???? ?????? Enable
cbi PORTD ,PD3
ret

lcd_data:
;input: r24 - byte
;output: -
;registers used: r24:r25

sbi PORTD ,PD2			; ??????? ??? ?????????? ????????? (PD2=1)
rcall write_2_nibbles	; ???????? ??? byte
ldi r24 ,43				; ??????? 43?sec ????? ?? ??????????? ? ????
ldi r25 ,0				; ??? ????????? ??? ??? ??????? ??? lcd
rcall wait_usec
ret

lcd_command:
;input: r24 - byte
;output: -
;registers used: r24:r25

cbi PORTD ,PD2			; ??????? ??? ?????????? ??????? (PD2=1)
rcall write_2_nibbles	; ???????? ??? ??????? ??? ??????? 39?sec
ldi r24 ,39				; ??? ??? ?????????? ??? ????????? ??? ??? ??? ??????? ??? lcd.
ldi r25 ,0				; ???.: ???????? ??? ???????, ?? clear display ??? return home,
rcall wait_usec			; ??? ???????? ????????? ?????????? ??????? ????????.
ret

lcd_init:
;input: -
;output: -
;registers used: r24:r25

ldi r24 ,40			; ???? ? ???????? ??? lcd ????????????? ??
ldi r25 ,0			; ????? ??????? ??? ???? ??? ????????????.
rcall wait_msec		; ??????? 40 msec ????? ???? ?? ???????????.
ldi r24 ,0x30		; ?????? ????????? ?? 8 bit mode
out PORTD ,r24		; ?????? ??? ???????? ?? ??????? ???????
sbi PORTD ,PD3		; ??? ?? ?????????? ??????? ??? ???????
cbi PORTD ,PD3		; ??? ??????, ? ?????? ???????????? ??? ?????
ldi r24 ,39
ldi r25 ,0			; ??? ? ???????? ??? ?????? ????????? ?? 8-bit mode
rcall wait_usec		; ??? ?? ?????? ??????, ???? ?? ? ???????? ???? ??????????
					; ??????? 4 bit ?? ??????? ?? ?????????? 8 bit
ldi r24 ,0x30
out PORTD ,r24
sbi PORTD ,PD3
cbi PORTD ,PD3
ldi r24 ,39
ldi r25 ,0
rcall wait_usec
ldi r24 ,0x20		; ?????? ?? 4-bit mode
out PORTD ,r24
sbi PORTD ,PD3
cbi PORTD ,PD3
ldi r24 ,39
ldi r25 ,0
rcall wait_usec
ldi r24 ,0x28		; ??????? ?????????? ???????? 5x8 ????????
rcall lcd_command	; ??? ???????? ??? ??????? ???? ?????
ldi r24 ,0x0f		; ???????????? ??? ??????, ???????? ??? ???????
rcall lcd_command
ldi r24 ,0x01		; ?????????? ??? ??????
rcall lcd_command
ldi r24 ,low(1530)
ldi r25 ,high(1530)
rcall wait_usec
ldi r24 ,0x06		; ???????????? ????????? ??????? ???? 1 ??? ??????????
rcall lcd_command	; ??? ????? ???????????? ???? ??????? ??????????? ???
					; ?????????????? ??? ????????? ????????? ??? ??????
ret

wait_usec: ;each cycle is 1 usec delay
;input: r24 - byte
;output: -
;registers used: r24

	sbiw r24,1
	nop
	nop
	nop
	nop
	brne wait_usec
	ret

wait_msec: ;delay depending on r25r24. 1msec each cycle
;input: r25:r24
;output: -
;registers used: r24:r25

	push r24
	push r25
	ldi r24,low(998)
	ldi r25,high(998)
	rcall wait_usec
	pop r25
	pop r24
	sbiw r24,1
	brne wait_msec
	ret

scan_row:
;input: line number - r24
;output: in each of the 4 LSB of r24 each key's condition  saved 
;registers used: r24:r25

ldi r25 ,0x08	; ???????????? ?? ‘0000 1000’
back_: 
lsl r25	; ???????? ???????? ??? ‘1’ ????? ??????
dec r24			; ???? ????? ? ??????? ??? ???????
brne back_
out PORTC ,r25	; ? ?????????? ?????? ??????? ??? ?????? ‘1’
nop
nop				; ??????????? ??? ?? ???????? ?? ????? ? ?????? ??????????
in r24 ,PINC	; ??????????? ?? ?????? (??????) ??? ????????? ??? ????? ?????????
andi r24 ,0x0f	; ????????????? ?? 4 LSB ???? ?? ‘1’ ???????? ??? ????? ?????????
ret				; ?? ?????????.

scan_keypad:
;input: -
;output: r25:r24 - the condition of each key of the keypad
;registers used: r27:r26, r25:r24

ldi r24 ,0x01	; ?????? ??? ????? ?????? ??? ?????????????
rcall scan_row
swap r24		; ?????????? ?? ??????????
mov r27 ,r24	; ??? 4 msb ??? r27
ldi r24 ,0x02	; ?????? ?? ??????? ?????? ??? ?????????????
rcall scan_row
add r27 ,r24	; ?????????? ?? ?????????? ??? 4 lsb ??? r27
ldi r24 ,0x03	; ?????? ??? ????? ?????? ??? ?????????????
rcall scan_row
swap r24		; ?????????? ?? ??????????
mov r26 ,r24	; ??? 4 msb ??? r26
ldi r24 ,0x04	; ?????? ??? ??????? ?????? ??? ?????????????
rcall scan_row
add r26 ,r24	; ?????????? ?? ?????????? ??? 4 lsb ??? r26
movw r24 ,r26	; ???????? ?? ?????????? ????? ??????????? r25:r24
ret



scan_keypad_rising_edge:
;input: r24 - expected bounce time for the keypad	
;output: r25:r24 - the condition of each key of the keypad (keys that were now pressed)
;registers used: r27:r26, r24:r25, r23:r22

mov r22 ,r24			; ?????????? ?? ????? ???????????? ???? r22
rcall scan_keypad		; ?????? ?? ???????????? ??? ?????????? ?????????
push r24				; ??? ?????????? ?? ??????????
push r25
mov r24 ,r22			; ??????????? r22 ms (??????? ????? 10-20 msec ??? ??????????? ??? ???
ldi r25 ,0				; ???????????? ??? ????????????? – ????????????? ????????????)
rcall wait_msec
rcall scan_keypad		; ?????? ?? ???????????? ???? ??? ????????
pop r23					; ??? ??????? ?????????? ???????????
pop r22
and r24 ,r22
and r25 ,r23
ldi r26 ,low(_tmp_)		; ??????? ??? ????????? ??? ????????? ????
ldi r27 ,high(_tmp_)	; ??????????? ????? ??? ???????? ????? r27:r26
ld r23 ,X+
ld r22 ,X
st X ,r24				; ?????????? ??? RAM ?? ??? ?????????
st -X ,r25				; ??? ?????????
com r23
com r22					; ???? ???? ????????? ??? ????? «?????» ???????
and r24 ,r22
and r25 ,r23
ret

keypad_to_ascii: ; ?????? ‘1’ ???? ?????? ??? ?????????? r26 ????????
;input: r25:r24 - result of scan_keypad, scan_keypad_rising_edge (16 bits - one for each key (pressed or not))	
;output: r24 - 0 in nothing is pressed, else ASCII code of the specific character
;registers used: r27:r26, r24:r25

movw r26 ,r24	 ; ?? ???????? ??????? ??? ????????
ldi r24 ,'*'
sbrc r26 ,0
ret
ldi r24 ,'0'
sbrc r26 ,1
ret
ldi r24 ,'#'
sbrc r26 ,2
ret
ldi r24 ,'D'
sbrc r26 ,3		; ?? ??? ????? ‘1’??????????? ??? ret, ?????? (?? ????? ‘1’)
ret				; ?????????? ?? ??? ?????????? r24 ??? ASCII ???? ??? D.
ldi r24 ,'7'
sbrc r26 ,4
ret
ldi r24 ,'8'
sbrc r26 ,5
ret
ldi r24 ,'9'
sbrc r26 ,6
ret
ldi r24 ,'C'
sbrc r26 ,7
ret
ldi r24 ,'4'	; ?????? ‘1’ ???? ?????? ??? ?????????? r27 ????????
sbrc r27 ,0		; ?? ???????? ??????? ??? ????????
ret
ldi r24 ,'5'
sbrc r27 ,1
ret
ldi r24 ,'6'
sbrc r27 ,2
ret
ldi r24 ,'B'
sbrc r27 ,3
ret
ldi r24 ,'1'
sbrc r27 ,4
ret
ldi r24 ,'2'
sbrc r27 ,5
ret
ldi r24 ,'3'
sbrc r27 ,6
ret
ldi r24 ,'A'
sbrc r27 ,7
ret
clr r24
ret
